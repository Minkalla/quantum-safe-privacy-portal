name: WBS 1.2.5 A/B Testing Infrastructure Validation

on:
  pull_request:
    branches: [main]
    paths:
      - 'src/portal/portal-backend/src/pqc/**'
      - 'docs/ab_testing/**'
      - '.github/workflows/WBS-1.2.5-validation-v1.yml'

jobs:
  environment-setup-validation:
    name: Environment Setup Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/portal/portal-backend/package-lock.json'
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest numpy pandas scikit-learn
          
      - name: Install Node.js dependencies
        working-directory: src/portal/portal-backend
        run: npm ci
        
      - name: Verify MongoDB connection
        run: |
          docker run --name mongo-test -d -p 27017:27017 mongo:6.0
          sleep 10
          docker exec mongo-test mongosh --eval "db.runCommand('ping')"
          docker stop mongo-test
          docker rm mongo-test
          
      - name: Validate environment variables
        working-directory: src/portal/portal-backend
        run: |
          cp .env.example .env
          echo "AB_TESTING_ENABLED=true" >> .env
          echo "METRICS_COLLECTION_ENABLED=true" >> .env
          echo "ROLLBACK_MONITORING_ENABLED=true" >> .env
          
      - name: Build backend application
        working-directory: src/portal/portal-backend
        run: npm run build

  integration-test-validation:
    name: Integration Test Validation
    runs-on: ubuntu-latest
    needs: environment-setup-validation
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/portal/portal-backend/package-lock.json'
          
      - name: Install dependencies
        working-directory: src/portal/portal-backend
        run: npm ci
        
      - name: Set up test environment
        working-directory: src/portal/portal-backend
        run: |
          cp .env.example .env
          echo "AB_TESTING_ENABLED=true" >> .env
          echo "METRICS_COLLECTION_ENABLED=true" >> .env
          echo "ROLLBACK_MONITORING_ENABLED=true" >> .env
          echo "MONGODB_URI=mongodb://localhost:27017/pqc_ab_test_db" >> .env
          
      - name: Run A/B testing integration tests
        working-directory: src/portal/portal-backend
        run: npm run test -- --testPathPattern="ab-testing" --passWithNoTests
        
      - name: Run PQC feature flag integration tests
        working-directory: src/portal/portal-backend
        run: npm run test -- --testPathPattern="pqc.*feature.*flag" --passWithNoTests
        
      - name: Run metrics collection tests
        working-directory: src/portal/portal-backend
        run: npm run test -- --testPathPattern="metrics" --passWithNoTests
        
      - name: Validate existing E2E tests still pass
        working-directory: src/portal/portal-backend
        run: npm run test:e2e
        
      - name: Test rollback system integration
        working-directory: src/portal/portal-backend
        run: npm run test -- --testPathPattern="rollback"

  security-environment-validation:
    name: Security Environment Validation
    runs-on: ubuntu-latest
    needs: integration-test-validation
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'src/portal/portal-backend/package-lock.json'
          
      - name: Install dependencies
        working-directory: src/portal/portal-backend
        run: npm ci
        
      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'src/portal/portal-backend'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          
      - name: Run npm audit
        working-directory: src/portal/portal-backend
        run: npm audit --audit-level=high
        
      - name: Validate A/B testing security measures
        working-directory: src/portal/portal-backend
        run: |
          # Check for hardcoded secrets in A/B testing code
          if grep -r "password\|secret\|key" src/pqc/ab-testing/ --include="*.ts" --include="*.js"; then
            echo "ERROR: Potential hardcoded secrets found in A/B testing code"
            exit 1
          fi
          
      - name: Validate user data privacy in experiments
        working-directory: src/portal/portal-backend
        run: |
          # Ensure user IDs are hashed in A/B testing
          if ! grep -r "hashlib\|crypto" src/pqc/ab-testing/ --include="*.ts" --include="*.js"; then
            echo "ERROR: User ID hashing not found in A/B testing code"
            exit 1
          fi
          
      - name: Check GDPR compliance in metrics collection
        working-directory: src/portal/portal-backend
        run: |
          # Verify data retention policies are implemented
          if ! grep -r "retention\|expire\|delete" src/pqc/ab-testing/ --include="*.ts" --include="*.js"; then
            echo "WARNING: Data retention policies should be implemented"
          fi
          
      - name: Validate rollback system security
        working-directory: src/portal/portal-backend
        run: |
          # Check for proper error handling in rollback system
          if ! grep -r "try.*catch\|error" src/pqc/ab-testing/rollback* --include="*.ts" --include="*.js"; then
            echo "ERROR: Proper error handling not found in rollback system"
            exit 1
          fi
